// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@protocol LIHAlertDelegate;
@class UILabel;
@class UIColor;
@class UIFont;
@class UIImageView;
@class UIImage;
@class UIButton;
@class UIView;
enum LIHAlertType : NSInteger;

SWIFT_CLASS("_TtC8LIHAlert8LIHAlert")
@interface LIHAlert : NSObject
@property (nonatomic, strong) id <LIHAlertDelegate> _Nullable delegate;
@property (nonatomic, strong) UILabel * _Nullable titleLabel;
@property (nonatomic, copy) NSString * _Nonnull titleText;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIFont * _Nullable titleTextFont;
@property (nonatomic) NSInteger titleTextNumberOfLines;
@property (nonatomic, strong) UILabel * _Nullable contentLabel;
@property (nonatomic, copy) NSString * _Nonnull contentText;
@property (nonatomic, strong) UIColor * _Nonnull contentTextColor;
@property (nonatomic, strong) UIFont * _Nullable contentTextFont;
@property (nonatomic) NSInteger contentTextNumberOfLines;
@property (nonatomic) UIActivityIndicatorViewStyle activityIndicatorStyle;
@property (nonatomic, strong) UIImageView * _Nullable iconImageView;
@property (nonatomic, strong) UIImage * _Nullable icon;
@property (nonatomic, strong) UIButton * _Nullable button_textWithButton;
@property (nonatomic, copy) NSString * _Nonnull buttonText;
@property (nonatomic, strong) UIColor * _Nonnull buttonColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTextColor;
@property (nonatomic, strong) UIFont * _Nullable buttonFont;
@property (nonatomic, strong) UIColor * _Nonnull buttonBordercolor;
@property (nonatomic) CGFloat buttonBorderWidth;
@property (nonatomic) CGFloat buttonCornerRadius;
@property (nonatomic, strong) UIButton * _Nullable buttonOne_textWithButton;
@property (nonatomic, copy) NSString * _Nonnull buttonOneText;
@property (nonatomic, strong) UIColor * _Nonnull buttonOneColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonOneTextColor;
@property (nonatomic, strong) UIFont * _Nullable buttonOneFont;
@property (nonatomic, strong) UIColor * _Nonnull buttonOneBordercolor;
@property (nonatomic) CGFloat buttonOneBorderWidth;
@property (nonatomic) CGFloat buttonOneCornerRadius;
@property (nonatomic, strong) UIButton * _Nullable buttonTwo_textWithButton;
@property (nonatomic, copy) NSString * _Nonnull buttonTwoText;
@property (nonatomic, strong) UIColor * _Nonnull buttonTwoColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTwoTextColor;
@property (nonatomic, strong) UIFont * _Nullable buttonTwoFont;
@property (nonatomic, strong) UIColor * _Nonnull buttonTwoBordercolor;
@property (nonatomic) CGFloat buttonTwoBorderWidth;
@property (nonatomic) CGFloat buttonTwoCornerRadius;
@property (nonatomic, strong) UIView * _Nullable alertView;
@property (nonatomic, strong) UIColor * _Nonnull alertColor;
@property (nonatomic) CGFloat alertAlpha;
@property (nonatomic) CGFloat alertHeight;
@property (nonatomic) CGFloat paddingLeft;
@property (nonatomic) CGFloat paddingTop;
@property (nonatomic) NSTimeInterval animationDuration;
@property (nonatomic) enum LIHAlertType alertType;
@property (nonatomic) BOOL autoCloseEnabled;
@property (nonatomic) double autoCloseTimeInterval;
@property (nonatomic) BOOL hasNavigationBar;
- (void)initAlert:(UIView * _Nonnull)container SWIFT_METHOD_FAMILY(none);
- (void)hideAlert:(void (^ _Nullable)(void))completionHandler;
- (void)show:(void (^ _Nullable)(void))showed hidden:(void (^ _Nullable)(void))hidden;
- (void (^ _Nullable)(BOOL))delayFunc:(NSTimeInterval)time closure:(void (^ _Nonnull)(void))closure;
- (void)cancel_delay:(void (^ _Nullable)(BOOL))closure;
- (void)orientationChanged:(NSNotification * _Nonnull)notification;
- (void)buttonPressed:(UIButton * _Nonnull)sender;
- (void)buttonTouchDown:(UIButton * _Nonnull)sender;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8LIHAlert16LIHAlertDelegate_")
@protocol LIHAlertDelegate
@optional
- (void)buttonPressed:(UIButton * _Nonnull)button;
- (void)buttonOnePressed:(UIButton * _Nonnull)button;
- (void)buttonTwoPressed:(UIButton * _Nonnull)button;
@end


SWIFT_CLASS("_TtC8LIHAlert15LIHAlertManager")
@interface LIHAlertManager : NSObject
+ (LIHAlert * _Nonnull)getTextAlertWithMessage:(NSString * _Nonnull)message;
+ (LIHAlert * _Nonnull)getTextWithTitleAlertWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message;
+ (LIHAlert * _Nonnull)getProcessingAlertWithMessage:(NSString * _Nonnull)message;
+ (LIHAlert * _Nonnull)getCustomViewAlertWithCustomView:(UIView * _Nonnull)customView;
+ (LIHAlert * _Nonnull)getSuccessAlertWithMessage:(NSString * _Nonnull)message;
+ (LIHAlert * _Nonnull)getErrorAlertWithMessage:(NSString * _Nonnull)message;
+ (LIHAlert * _Nonnull)getTextWithButtonAlertWithMessage:(NSString * _Nonnull)message buttonText:(NSString * _Nonnull)buttonText;
+ (LIHAlert * _Nonnull)getTextWithTwoButtonsAlertWithMessage:(NSString * _Nonnull)message buttonOneText:(NSString * _Nonnull)buttonOneText buttonTwoText:(NSString * _Nonnull)buttonTwoText;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LIHAlertType) {
  LIHAlertTypeCustom = 0,
  LIHAlertTypeText = 1,
  LIHAlertTypeTextWithLoading = 2,
  LIHAlertTypeTextWithIcon = 3,
  LIHAlertTypeTextWithButton = 4,
  LIHAlertTypeTextWithTwoButtons = 5,
  LIHAlertTypeTextWithTitle = 6,
};

#pragma clang diagnostic pop
